{"version":3,"file":"PostMessageRefreshMutations.js","sources":["../../src/presentation/editor/PostMessageRefreshMutations.tsx"],"sourcesContent":["import {memo, startTransition, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, type SanityDocument, useEditState} from 'sanity'\n\nimport {type ConnectionStatus, type VisualEditingConnection} from '../types'\n\nexport interface PostMessageRefreshMutationsProps {\n  id: string\n  type: string\n  comlink: VisualEditingConnection\n  previewKitConnection: ConnectionStatus\n  loadersConnection: ConnectionStatus\n}\n\nfunction PostMessageRefreshMutations(props: PostMessageRefreshMutationsProps): React.ReactNode {\n  const {comlink, type, previewKitConnection, loadersConnection} = props\n  const id = useMemo(() => getPublishedId(props.id), [props.id])\n  const {draft, published, ready} = useEditState(id, type, 'low')\n  const livePreviewEnabled =\n    previewKitConnection === 'connected' || loadersConnection === 'connected'\n\n  if ((ready && draft) || published) {\n    return (\n      <PostMessageRefreshMutationsInner\n        key={id}\n        comlink={comlink}\n        draft={draft}\n        livePreviewEnabled={livePreviewEnabled}\n        published={published}\n      />\n    )\n  }\n\n  return null\n}\n\ninterface PostMessageRefreshMutationsInnerProps\n  extends Pick<PostMessageRefreshMutationsProps, 'comlink'> {\n  livePreviewEnabled: boolean\n  draft: SanityDocument | null\n  published: SanityDocument | null\n}\nfunction PostMessageRefreshMutationsInner(props: PostMessageRefreshMutationsInnerProps) {\n  const {comlink, draft, published, livePreviewEnabled} = props\n  const [prevDraft, setPrevDraft] = useState(draft)\n  const [prevPublished, setPrevPublished] = useState(published)\n\n  useEffect(() => {\n    if (prevDraft?._rev !== draft?._rev) {\n      startTransition(() => setPrevDraft(draft))\n      if (draft) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(draft),\n        })\n      }\n    }\n    if (prevPublished?._rev !== published?._rev) {\n      startTransition(() => setPrevPublished(published))\n      if (published) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(published),\n        })\n      }\n    }\n  }, [comlink, draft, livePreviewEnabled, prevDraft?._rev, prevPublished?._rev, published])\n\n  return null\n}\n\nfunction parseDocument(document: SanityDocument & {slug?: {current?: string | null}}): {\n  _id: string\n  _type: string\n  _rev: string\n  slug?: {current?: string | null}\n} {\n  const {_id, _type, _rev, slug} = document\n  return {_id, _type, _rev, slug}\n}\n\nexport default memo(PostMessageRefreshMutations)\n"],"names":["PostMessageRefreshMutations","props","$","_c","comlink","type","previewKitConnection","loadersConnection","t0","t1","id","getPublishedId","draft","published","ready","useEditState","livePreviewEnabled","t2","jsx","PostMessageRefreshMutationsInner","prevDraft","setPrevDraft","useState","prevPublished","setPrevPublished","_rev","startTransition","post","source","document","parseDocument","t3","useEffect","_id","_type","slug","memo"],"mappings":"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"}