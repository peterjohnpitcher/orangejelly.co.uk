{"version":3,"file":"PresentationToolGrantsCheck.mjs","sources":["../../src/presentation/features/PostMessageFeatures.tsx","../../src/presentation/machines/presentation-machine.ts","../../src/presentation/overlays/SharedStateProvider.tsx","../../src/presentation/panels/Panel.tsx","../../src/presentation/util/debounce.ts","../../src/presentation/panels/usePanelsStorage.ts","../../src/presentation/panels/util.ts","../../src/presentation/panels/Panels.tsx","../../src/presentation/components/ErrorCard.tsx","../../src/presentation/editor/PresentationPaneRouterProvider.tsx","../../src/presentation/editor/DocumentListPane.tsx","../../src/presentation/editor/DocumentPane.tsx","../../src/presentation/editor/DocumentPanel.tsx","../../src/presentation/editor/usePreviewState.ts","../../src/presentation/editor/ContentEditor.tsx","../../src/presentation/panels/usePanelId.ts","../../src/presentation/panels/PanelResizer.tsx","../../src/presentation/PresentationContent.tsx","../../src/presentation/PresentationNavigateProvider.tsx","../../src/presentation/useLocalState.ts","../../src/presentation/PresentationNavigator.tsx","../../src/presentation/PresentationParamsProvider.tsx","../../src/presentation/PresentationProvider.tsx","../../src/presentation/useAllowPatterns.ts","../../src/presentation/util/encodeStudioPerspective.ts","../../src/presentation/useId.ts","../../src/presentation/preview/IFrame.tsx","../../src/presentation/preview/OpenPreviewButton.tsx","../../src/presentation/useTargetOrigin.ts","../../src/presentation/preview/PreviewLocationInput.tsx","../../src/presentation/preview/SharePreviewMenu.tsx","../../src/presentation/preview/PreviewHeader.tsx","../../src/presentation/preview/Preview.tsx","../../src/presentation/util/warnOnce.ts","../../src/presentation/useDocumentsOnPage.ts","../../src/presentation/useMainDocument.ts","../../src/presentation/util/parse.ts","../../src/presentation/useParams.ts","../../src/presentation/usePopups.ts","../../src/presentation/usePresentationPerspective.ts","../../src/presentation/useStatus.ts","../../src/presentation/PresentationTool.tsx","../../src/presentation/actors/create-preview-secret.ts","../../src/presentation/actors/read-shared-secret.ts","../../src/presentation/actors/resolve-allow-patterns.ts","../../src/presentation/actors/resolve-initial-url.ts","../../src/presentation/actors/resolve-preview-mode.ts","../../src/presentation/actors/resolve-preview-mode-url.ts","../../src/presentation/actors/resolve-url-from-preview-search-param.ts","../../src/presentation/machines/preview-url.ts","../../src/presentation/usePreviewUrlActorRef.ts","../../src/presentation/useReportInvalidPreviewSearchParam.tsx","../../src/presentation/useVercelBypassSecret.ts","../../src/presentation/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","import {type ActorRefFrom, assign, setup} from 'xstate'\n\ninterface Context {\n  url: URL | null\n  error: Error | null\n  visualEditingOverlaysEnabled: boolean\n}\n\ntype Event =\n  | {type: 'toggle visual editing overlays'; enabled: boolean}\n  | {type: 'iframe loaded'}\n  | {type: 'iframe refresh'}\n  | {type: 'iframe reload'}\n\nexport const presentationMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    //\n  },\n  actors: {\n    //\n  },\n  guards: {\n    //\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOcwDsAuBDbAlgPaYAEAKkUQDYDEBAZqrgLZinrVG4QDaADAF1EoAA5FYBQiREgAHogAsAJgA0IAJ6IAHAEYAdIoCcJowFY9R-vzPLlAX3vq0GHPmJlKNfVx4FMUPRMrOy+EJACwkgg4pLSmLIKCLoAbIr6Zoop2tqKAMxpJnnF6loIZkbK+uZ5umapKXmK-Cm6js7osFh48RRU1D7c4RC02ERQUNTsAG4EsACuuNSkkFL+UKRE02Co1LgasJGysWsy0UnaZinVyrpGAOx1Rim2efeliPe3hma1Zvy6XT8W4OJwgFxdNy9LwDMKQILMNgcMBMOAACyO0RO8USiAK930LWU-3uiiB9yaKXemkQjW01V+txS-GKqUe7XBnW67hIfW8cJGjER7E4Q0xYgkpwS5zxVMJKWJ-FJ5Mp1LKFn4Pz+DSaLTaYIh3Oh-UGPEg+nQqNgaPWCJCpAF4pikpxMoQKWZ+gp+TSZLy1hSH3deXpNSZLNqVP1HVcPQ8fNhQ3Nor8ATtSMdQmOLo8uPdnu9BUUfoDQY1WrqOuarUcYMwRHC8Gihqh8Zh2biubdAFpAzSEL2OS247yYfodqgiKgO1K8yog7ptATFL9dFljMDrHkh1zW6OTWF1jPXaAkmY1YgKnktfxtC9dPd+Io9DvYzzPAekxBj13T3i7vKirKkqqpBsYVQ1HUFjFs0t6KK+kIjh+-JfvoBAQFMP5nH+CDaMo16KjYyjMvUNh5GWOT6MoLL8A8ygrk0dQIUabafmaEAWiinQ2gEWHSjhjJUYuj73Pcd63noQaNEYFb-Dk2S0cxe7IYm7GcYevFYjm2HyJeeQQb8tFkikVjGNoFGajUt73o+z61vYQA */\n  id: 'Presentation Tool',\n  context: {\n    url: null,\n    error: null,\n    visualEditingOverlaysEnabled: false,\n  },\n\n  on: {\n    'iframe reload': {\n      actions: assign({url: null}),\n      target: '.loading',\n    },\n  },\n\n  states: {\n    error: {\n      description:\n        'Failed to load, either because of a misconfiguration, a network error, or an unexpected error',\n      tags: ['error'],\n    },\n    loading: {\n      on: {\n        'iframe loaded': {\n          target: 'loaded',\n        },\n      },\n      tags: ['busy'],\n    },\n    loaded: {\n      on: {\n        'toggle visual editing overlays': {\n          actions: assign({\n            visualEditingOverlaysEnabled: ({event}) => event.enabled,\n          }),\n        },\n        'iframe refresh': {\n          target: '.refreshing',\n        },\n        'iframe reload': {\n          target: '.reloading',\n        },\n      },\n\n      states: {\n        idle: {},\n        refreshing: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n        reloading: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n      },\n      initial: 'idle',\n    },\n  },\n  initial: 'loading',\n})\n\nexport type PresentationMachineRef = ActorRefFrom<typeof presentationMachine>\n","import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import {useMemo} from 'react'\n\nimport {debounce} from '../util/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n","import {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // oxlint-disable-next-line no-unused-vars\n    parentRefPath,\n    // oxlint-disable-next-line no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): React.JSX.Element {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // oxlint-disable-next-line no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type Path} from 'sanity'\n\nimport {StructureToolProvider} from '../../structure/StructureToolProvider'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n  usePerspective,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  snapshot?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n  const {perspectiveStack} = usePerspective()\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      perspectiveStack,\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId, perspectiveStack])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  type Path,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          snapshot: previewState.snapshot,\n          fallback: mainDocumentState!.document,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // oxlint-disable-next-line no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {\n  type CommentIntentGetter,\n  CommentsIntentProvider,\n  type Path,\n  type SanityDocument,\n} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigate, type PresentationNavigateContextValue} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useAllowPatterns(previewUrlRef: PreviewUrlRef) {\n  const allowPatterns = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  if (!Array.isArray(allowPatterns)) {\n    throw new TypeError('allowPatterns must be an array')\n  }\n  return allowPatterns\n}\n","/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n","import {useId as useReactId} from 'react'\n\nexport function useId(): string {\n  const id = useReactId()\n  // Uses the new format introduced in: https://github.com/facebook/react/pull/32001\n  return id.startsWith(':') ? id.replace(/^:(.+):$/, '\\u00AB$1\\u00BB') : id\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useEffect, useImperativeHandle, useRef} from 'react'\nimport {createGlobalStyle, styled} from 'styled-components'\n\nimport {useId} from '../useId'\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(\n  function IFrame(props, forwardedRef) {\n    const {animate, initial, onLoad, preventClick, src, variants, style} = props\n\n    const ref = useRef<HTMLIFrameElement | null>(null)\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const viewTransitionName = useId()\n\n    return (\n      <>\n        <IFrameElement\n          style={{\n            ...style,\n            viewTransitionName,\n          }}\n          animate={animate}\n          initial={initial}\n          onLoad={onLoad}\n          ref={ref}\n          src={src}\n          variants={variants}\n        />\n        {preventClick && <IFrameOverlay />}\n        <GlobalViewTransition />\n      </>\n    )\n  },\n)\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\nconst GlobalViewTransition = createGlobalStyle`\nhtml:active-view-transition-type(sanity-iframe-viewport) {\n  view-transition-name: none;\n  &::view-transition {\n    pointer-events: none;\n  }\n  /* &::view-transition-old(root) {\n    display: none;\n  }\n  &::view-transition-new(root) {\n    animation: none;\n  } */\n}\n`\n","import {LaunchIcon} from '@sanity/icons'\nimport {urlSearchParamPreviewPerspective} from '@sanity/preview-url-secret/constants'\nimport {Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationPerspective} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin?: string\n    previewLocationRoute: string\n    perspective: PresentationPerspective\n    targetOrigin: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute, perspective, targetOrigin} = props\n\n  const openPreviewLink = useMemo(() => {\n    const url = new URL(previewLocationRoute, previewLocationOrigin || targetOrigin)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    const {pathname, search} = url\n\n    return `${previewLocationOrigin}${pathname}${search}`\n  }, [perspective, previewLocationOrigin, previewLocationRoute, targetOrigin])\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={openPreviewLink}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useTargetOrigin(previewUrlRef: PreviewUrlRef): string {\n  const targetOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  if (!targetOrigin) {\n    throw new TypeError('targetOrigin is required')\n  }\n  return targetOrigin\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {useTargetOrigin} from '../useTargetOrigin'\n\nexport function PreviewLocationInput(props: {\n  fontSize?: number\n  onChange: (value: string) => void\n  previewUrlRef: PreviewUrlRef\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}): React.JSX.Element {\n  const {fontSize = 1, onChange, padding = 3, prefix, suffix, value, previewUrlRef} = props\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        let absoluteValue = sessionValue\n        try {\n          absoluteValue = new URL(sessionValue, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n\n        if (Array.isArray(allowOrigins)) {\n          if (!allowOrigins.some((pattern) => pattern.test(absoluteValue))) {\n            setCustomValidity(\n              t('preview-location-input.error', {\n                origin: targetOrigin,\n                context: 'origin-not-allowed',\n              }),\n            )\n            event.currentTarget.reportValidity()\n            return\n          }\n          // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        } else if (\n          !targetOrigin &&\n          (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === targetOrigin ? `${targetOrigin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue)\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [allowOrigins, basePath, onChange, sessionValue, t, targetOrigin],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  const handleClear = useCallback(() => {\n    setCustomValidity(undefined)\n    let nextValue = value\n    try {\n      nextValue = new URL(value, targetOrigin).toString()\n    } catch {\n      // ignore\n    }\n    setSessionValue(nextValue)\n  }, [targetOrigin, value])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [targetOrigin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={handleClear}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? new URL(value, targetOrigin).toString() : sessionValue}\n      />\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type HeaderOptions} from '../types'\nimport {useId} from '../useId'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    presentationRef,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    previewUrlRef,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      presentationRef.send({type: 'iframe reload'})\n      // Funky way to reload an iframe without CORS issues\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n  const isLoaded = useSelector(presentationRef, (state) => state.matches('loaded'))\n  const isRefreshing = useSelector(presentationRef, (state) =>\n    state.matches({loaded: 'refreshing'}),\n  )\n  const isReloading = useSelector(presentationRef, (state) => state.matches({loaded: 'reloading'}))\n  const overlaysEnabled = useSelector(\n    presentationRef,\n    (state) => state.context.visualEditingOverlaysEnabled,\n  )\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  const perspectiveToggleTooltipId = useId()\n\n  /**\n   * If the preview URL machine is busy it means it's about to change the target origin and reload the iframe,\n   * so we show a spinner\n   */\n  const previewUrlBusy = useSelector(previewUrlRef, (state) => state.hasTag('busy'))\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                indeterminate={!isLoaded}\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={isLoading || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          previewUrlRef={previewUrlRef}\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {isLoaded\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {\n                          context: isLoading\n                            ? 'loading'\n                            : isRefreshing\n                              ? 'refreshing'\n                              : isReloading\n                                ? 'reloading'\n                                : 'unknown',\n                        })}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={isReloading || isRefreshing || previewUrlBusy}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n                perspective={perspective}\n                targetOrigin={targetOrigin}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          // eslint-disable-next-line react/jsx-no-bind\n          ref={(node) => {\n            node?.style.setProperty('view-transition-name', perspectiveToggleTooltipId)\n          }}\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            data-testid=\"preview-viewport-toggle\"\n            data-viewport={viewport}\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/** @internal */\nexport function PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): React.JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable react/no-unused-prop-types */\nimport {createConnectionMachine, createController} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {Translate, useTranslation} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationMachineRef} from '../machines/presentation-machine'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {usePresentationNavigate} from '../usePresentationNavigate'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {PreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  presentationRef: PresentationMachineRef\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n  previewUrlRef: PreviewUrlRef\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n      presentationRef,\n      previewUrlRef,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const previewHeader = <PreviewHeader {...props} iframeRef={ref} options={header} />\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const isLoading = useSelector(\n      presentationRef,\n      (state) => state.matches('loading') || state.matches({loaded: 'reloading'}),\n    )\n\n    const [timedOut, setTimedOut] = useState(false)\n    const isRefreshing = useSelector(presentationRef, (state) =>\n      state.matches({loaded: 'refreshing'}),\n    )\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = isLoading || isRefreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      presentationRef.send({type: 'iframe reload'})\n    }, [presentationRef, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (isLoading || isRefreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, isLoading, isRefreshing])\n\n    useEffect(() => {\n      if (isLoading || isRefreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [isLoading, overlaysConnection, isRefreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      presentationRef.send({type: 'iframe loaded'})\n    }, [presentationRef])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) && !continueAnyway\n      )\n    }, [continueAnyway, isLoading, isRefreshing, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        isLoading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      isLoading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition({\n            // @ts-expect-error - fix typings\n            update: () => flushSync(() => update()),\n            types: ['sanity-iframe-viewport'],\n          })\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    const toast = useToast()\n    const allowOrigins = useAllowPatterns(previewUrlRef)\n    const [checkOrigin, setCheckOrigin] = useState<false | string>(false)\n    const [reportedMismatches] = useState(new Set<string>())\n    const reportMismatchingOrigin = useEffectEvent((reportedOrigin: string) => {\n      if (allowOrigins.some((allow) => allow.test(reportedOrigin))) {\n        setCheckOrigin(reportedOrigin)\n        return\n      }\n      if (reportedMismatches.has(reportedOrigin)) return\n      reportedMismatches.add(reportedOrigin)\n      console.warn('Visual Editing is here but misconfigured', {reportedOrigin})\n      toast.push({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${reportedOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-frame.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-frame.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              targetOrigin: previewUrl.origin,\n              reportedOrigin,\n            }}\n          />\n        ),\n      })\n    })\n    const navigate = usePresentationNavigate()\n    const navigateEvent = useEffectEvent((url: string) => {\n      if (!checkOrigin) return\n      const nextUrl = new URL(url, checkOrigin)\n      navigate(`${checkOrigin}${nextUrl.pathname}${nextUrl.search}${nextUrl.hash}`)\n    })\n    useEffect(() => {\n      if (!checkOrigin) {\n        return undefined\n      }\n      const target = ref.current?.contentWindow\n      if (!target) {\n        return undefined\n      }\n      const controller = createController({targetOrigin: checkOrigin})\n      controller.addTarget(target)\n      const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n        {\n          name: 'presentation',\n          heartbeat: true,\n          connectTo: 'visual-editing',\n        },\n        createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n          actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n        }),\n      )\n\n      comlink.on('visual-editing/navigate', (data) => {\n        navigateEvent(data.url)\n      })\n      const stop = comlink.start()\n\n      return () => {\n        stop()\n        controller.destroy()\n      }\n    }, [checkOrigin])\n    useEffect(() => {\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const interval = setInterval(() => {\n          ref.current?.contentWindow?.postMessage(\n            {domain: 'sanity/channels', from: 'presentation', type: 'presentation/status'},\n            /**\n             * The targetOrigin is set to '*' intentionally here, as we need to find out if the iframe is misconfigured and has the wrong origin\n             */\n            '*',\n          )\n        }, 1_000)\n\n        const controller = new AbortController()\n        window.addEventListener(\n          'message',\n          ({data}: MessageEvent<unknown>) => {\n            /**\n             * Listen for replies to presentation/status\n             */\n            if (\n              data &&\n              typeof data === 'object' &&\n              'domain' in data &&\n              data.domain === 'sanity/channels' &&\n              'type' in data &&\n              data.type === 'visual-editing/status' &&\n              'data' in data &&\n              typeof data.data === 'object' &&\n              data.data &&\n              'origin' in data.data &&\n              typeof data.data.origin === 'string'\n            ) {\n              reportMismatchingOrigin(data.data.origin)\n            }\n          },\n          {signal: controller.signal},\n        )\n\n        return () => {\n          controller.abort()\n          clearInterval(interval)\n        }\n      }\n      return undefined\n    }, [overlaysConnection, timedOut])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          {previewHeader}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !isLoading &&\n                !isRefreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // oxlint-disable-next-line no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient, usePerspective} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin']\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  targetOrigin: string\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, targetOrigin, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const {perspectiveStack} = usePerspective()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const url = new URL(relativeUrl, targetOrigin)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: perspectiveStack,\n            signal: controller.signal,\n            tag: 'use-main-document',\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, perspectiveStack, relativeUrl, resolvers, targetOrigin])\n\n  return mainDocumentState\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\n\nimport {type PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\nimport {parseRouterState} from './util/parse'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview: routerSearchParams.preview || initialPreviewUrl.toString(),\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state.id) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n","import {usePerspective} from 'sanity'\n\nimport {type PresentationPerspective} from './types'\n\n/**\n * @internal\n */\nexport function usePresentationPerspective(): PresentationPerspective {\n  const {perspectiveStack, selectedPerspectiveName = 'drafts', selectedReleaseId} = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n  return perspective\n}\n","import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {presentationMachine} from './machines/presentation-machine'\nimport {type PreviewUrlRef} from './machines/preview-url'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useAllowPatterns} from './useAllowPatterns'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePresentationPerspective} from './usePresentationPerspective'\nimport {useStatus} from './useStatus'\nimport {useTargetOrigin} from './useTargetOrigin'\nimport {debounce} from './util/debounce'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n  initialPreviewUrl: URL\n  previewUrlRef: PreviewUrlRef\n}): React.JSX.Element {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n    initialPreviewUrl,\n    previewUrlRef,\n  } = props\n\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const components = tool.options?.components\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const perspective = usePresentationPerspective()\n\n  const canSharePreviewAccess = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewMode?.shareAccess !== false,\n  )\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const presentationRef = useActorRef(presentationMachine)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    targetOrigin,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title} = data\n      let url = data.url\n      /**\n       * The URL is relative, we need to resolve it to an absolute URL\n       */\n      if (!url.startsWith('http')) {\n        try {\n          url = new URL(url, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n      }\n\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate(\n            {},\n            {preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`},\n          )\n        } catch {\n          handleNavigate({}, {preview: url})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      presentationRef.send({type: 'toggle visual editing overlays', enabled: data.enabled})\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // oxlint-disable-next-line no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        presentationRef.send({type: 'iframe refresh'})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      presentationRef.send({type: 'iframe loaded'})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, presentationRef, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // oxlint-disable-next-line no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don't need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, targetOrigin)\n      const preview = url.toString()\n      if (params.preview === preview) {\n        return\n      }\n      if (Array.isArray(allowOrigins)) {\n        if (allowOrigins.some((pattern) => pattern.test(preview))) {\n          navigate({}, {preview})\n        }\n      } else if (url.origin === targetOrigin) {\n        navigate({}, {preview})\n      }\n    },\n    [targetOrigin, params.preview, allowOrigins, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      try {\n        const frameOrigin = new URL(frameStateRef.current.url, targetOrigin).origin\n        const previewOrigin = new URL(params.preview, targetOrigin).origin\n        if (frameOrigin !== previewOrigin) {\n          return\n        }\n      } catch {\n        // ignore\n      }\n\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection === 'connected') {\n        /**\n         * Translate the possibly absolute params url back to a relative URL\n         */\n        let url = params.preview\n        if (url.startsWith('http')) {\n          try {\n            const newUrl = new URL(params.preview, targetOrigin)\n            url = newUrl.pathname + newUrl.search + newUrl.hash\n          } catch {\n            // ignore\n          }\n        }\n        visualEditingComlink?.post('presentation/navigate', {\n          url,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      presentationRef.send({type: 'iframe refresh'})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, presentationRef, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container data-testid=\"presentation-root\" height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // @TODO move closer to the <iframe> element itself to allow for more precise handling of when to reload the iframe and when to reconnect when the target origin changes\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          header={unstable_header}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                          presentationRef={presentationRef}\n                          previewUrlRef={previewUrlRef}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\n// @TODO reconcile with core utils\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\n// @TODO reconcile with core utils\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\n// @TODO reconcile with core utils\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineCreatePreviewSecretActor({\n  client,\n  currentUserId,\n}: {\n  client: SanityClient\n  currentUserId: string | undefined\n}): PromiseActorLogic<{\n  secret: string\n  expiresAt: Date\n}> {\n  return fromPromise(async () => {\n    return await createPreviewSecret(client, 'sanity/presentation', location.href, currentUserId)\n  })\n}\n","import {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineReadSharedSecretActor({\n  client,\n}: {\n  client: SanityClient\n}): PromiseActorLogic<string | null> {\n  return fromPromise(async () => {\n    return client.fetch<string | null>(\n      fetchSharedAccessQuery,\n      {},\n      {tag: 'presentation.fallback-to-shared-access-secret'},\n    )\n  })\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PreviewUrlAllowOption, type PreviewUrlAllowOptionContext} from '../types'\n\ninterface Context extends Pick<PreviewUrlAllowOptionContext, 'client'> {\n  allowOption: PreviewUrlAllowOption | undefined\n}\ntype Input = Omit<PreviewUrlAllowOptionContext, 'client' | 'origin'>\n\n/** @internal */\nexport function defineResolveAllowPatternsActor({\n  client,\n  allowOption,\n}: Context): PromiseActorLogic<URLPattern[], Input> {\n  return fromPromise<URLPattern[], Input>(async ({input}) => {\n    const {initialUrl} = input\n\n    /**\n     * Lazy load the URLPattern polyfill on-demand, if needed\n     */\n    if (typeof URLPattern === 'undefined') {\n      await import('urlpattern-polyfill')\n    }\n\n    /**\n     * If no allow option is provided, we use the initial URL to infer the pattern\n     */\n    if (!allowOption) {\n      return [new URLPattern(initialUrl.origin)]\n    }\n\n    const maybePatterns =\n      typeof allowOption === 'function'\n        ? await allowOption({client, origin, initialUrl})\n        : allowOption\n    const patterns = Array.isArray(maybePatterns) ? maybePatterns : [maybePatterns]\n    const urlPatterns = patterns.map((value) => {\n      const urlPattern = new URLPattern(value)\n      if (urlPattern.hostname === '*') {\n        throw new Error(\n          `It's insecure to allow any hostname, it could disclose data to a malicious site`,\n        )\n      }\n      return urlPattern\n    })\n    /**\n     * If the declared patterns don't consider the initial URL valid, we add it to the list of patterns\n     */\n    if (!urlPatterns.some((pattern) => pattern.test(initialUrl.origin))) {\n      return [...urlPatterns, new URLPattern(initialUrl.origin)]\n    }\n\n    return urlPatterns\n  })\n}\n","import {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PresentationPerspective, type PreviewUrlOption} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport function defineResolveInitialUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, {previewSearchParam: string | null}> {\n  return fromPromise<URL, {previewSearchParam: string | null}>(\n    async ({input}: {input: {previewSearchParam: string | null}}) => {\n      const {origin} = location\n      /**\n       * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n       */\n      if (typeof previewUrlOption === 'function') {\n        const initial = await previewUrlOption({\n          client,\n          studioBasePath,\n          // @TODO handle checking permissions here, and then generating a secret\n          previewUrlSecret: '',\n          studioPreviewPerspective: encodeStudioPerspective(perspective),\n          previewSearchParam: input.previewSearchParam,\n        })\n        return new URL(initial, origin)\n      }\n\n      /**\n       * Provide backwards compatibility for versions where `previewUrl` where optional\n       */\n      if (!previewUrlOption) {\n        return new URL('/', origin)\n      }\n      /**\n       * Support setting `previewUrl` as a string shorthand\n       */\n      if (typeof previewUrlOption === 'string') {\n        return new URL(previewUrlOption, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'function') {\n        const initial = await previewUrlOption.initial({\n          client,\n          origin,\n        })\n        return new URL(initial, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'string') {\n        return new URL(previewUrlOption.initial, origin)\n      }\n\n      return new URL(previewUrlOption.preview || '/', previewUrlOption.origin || origin)\n    },\n  )\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n  type PreviewUrlPreviewModeOptionContext,\n} from '../types'\n\ntype Options = Omit<PreviewUrlPreviewModeOptionContext, 'origin'>\n\ninterface Context extends Pick<Options, 'client'> {\n  previewUrlOption: PreviewUrlOption | undefined\n}\ntype Input = Omit<Options, 'client'>\n\n/** @internal */\nexport function defineResolvePreviewModeActor({\n  client,\n  previewUrlOption,\n}: Context): PromiseActorLogic<PreviewUrlPreviewMode | false, Input> {\n  return fromPromise<PreviewUrlPreviewMode | false, Input>(async ({input}) => {\n    const {targetOrigin} = input\n\n    /**\n     * Handle legacy draftMode options\n     */\n    if (typeof previewUrlOption === 'object' && previewUrlOption?.draftMode) {\n      return {\n        enable: previewUrlOption.draftMode.enable,\n        shareAccess: previewUrlOption.draftMode.shareAccess ?? true,\n      }\n    }\n\n    /**\n     * If no preview mode option is provided, we disable preview mode\n     */\n    if (\n      !previewUrlOption ||\n      typeof previewUrlOption === 'string' ||\n      typeof previewUrlOption === 'function' ||\n      !previewUrlOption.previewMode\n    ) {\n      return false\n    }\n\n    /**\n     * If the option is a function, we resolve it\n     */\n    const previewMode =\n      typeof previewUrlOption.previewMode === 'function'\n        ? await previewUrlOption.previewMode({client, origin, targetOrigin})\n        : previewUrlOption.previewMode\n\n    if (previewMode === false) {\n      return false\n    }\n\n    /**\n     * Return only supported preview mode options, filter out unknowns\n     */\n    return {\n      enable: previewMode.enable,\n      shareAccess: previewMode.shareAccess ?? true,\n    }\n  })\n}\n","import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PresentationPerspective,\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport interface ResolvePreviewModeUrlInput {\n  previewUrlSecret: string\n  resolvedPreviewMode: PreviewUrlPreviewMode\n  initialUrl: URL\n}\n\n/** @internal */\nexport function defineResolvePreviewModeUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, ResolvePreviewModeUrlInput> {\n  return fromPromise<URL, ResolvePreviewModeUrlInput>(async ({input}) => {\n    const {previewUrlSecret, resolvedPreviewMode, initialUrl} = input\n\n    /**\n     * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n     */\n    if (typeof previewUrlOption === 'function') {\n      const initial = await previewUrlOption({\n        client,\n        studioBasePath,\n        previewUrlSecret,\n        studioPreviewPerspective: encodeStudioPerspective(perspective),\n        previewSearchParam: initialUrl.toString(),\n      })\n      return new URL(initial, initialUrl)\n    }\n\n    /**\n     * If the resolved preview mode is false then we have an unexpected state that shouldn't be possible\n     */\n    if (!resolvedPreviewMode) {\n      throw new Error('Resolved preview mode is false')\n    }\n\n    const url = new URL(resolvedPreviewMode.enable, initialUrl)\n\n    url.searchParams.set(urlSearchParamPreviewSecret, previewUrlSecret)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    if (initialUrl.pathname !== url.pathname) {\n      url.searchParams.set(\n        urlSearchParamPreviewPathname,\n        `${initialUrl.pathname}${initialUrl.search}${initialUrl.hash}`,\n      )\n    }\n\n    return url\n  })\n}\n","import {fromPromise} from 'xstate'\n\n/** @internal */\nexport const resolveUrlFromPreviewSearchParamActor = fromPromise<\n  URL,\n  {initialUrl: URL; previewSearchParam: string | null | undefined; allowOrigins: URLPattern[]}\n>(async ({input}) => {\n  const {previewSearchParam, initialUrl, allowOrigins} = input\n\n  /**\n   * If the preview search param is falsy we can skip\n   */\n  if (!previewSearchParam) {\n    return initialUrl\n  }\n\n  /**\n   * Validate the previewSearchParam\n   */\n  try {\n    const previewSearchParamUrl = new URL(previewSearchParam, initialUrl.origin)\n    if (!allowOrigins.some((pattern) => pattern.test(previewSearchParamUrl.origin))) {\n      return initialUrl\n    }\n    return previewSearchParamUrl\n  } catch (err) {\n    return initialUrl\n  }\n})\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityDocument} from '@sanity/types'\nimport {uuid} from '@sanity/uuid'\nimport {throwError} from 'rxjs'\nimport {type DocumentValuePermission, type PermissionCheckResult} from 'sanity'\nimport {type ActorRefFrom, assign, fromObservable, fromPromise, log, setup} from 'xstate'\n\nimport {type ResolvePreviewModeUrlInput} from '../actors/resolve-preview-mode-url'\nimport {resolveUrlFromPreviewSearchParamActor} from '../actors/resolve-url-from-preview-search-param'\nimport {type PreviewUrlPreviewMode} from '../types'\n\ninterface Context {\n  initialUrl: URL | null\n  previewUrl: URL | null\n  allowOrigins: URLPattern[] | null\n  error: Error | null\n  previewSearchParam: string | null\n  previewUrlSecret: {secret: string; expiresAt: Date} | null\n  previewAccessSharingCreatePermission: PermissionCheckResult | null\n  previewAccessSharingReadPermission: PermissionCheckResult | null\n  previewAccessSharingUpdatePermission: PermissionCheckResult | null\n  previewUrlSecretPermission: PermissionCheckResult | null\n  previewMode: PreviewUrlPreviewMode | null\n}\n\ntype SetPreviewSearchParamEvent = {\n  type: 'set preview search param'\n  previewSearchParam: string | null\n}\ntype Event = SetPreviewSearchParamEvent\n\ntype Input = Omit<SetPreviewSearchParamEvent, 'type'>\n\nexport interface CheckPermissionInput {\n  checkPermissionName: DocumentValuePermission\n  document: Partial<SanityDocument> | null\n}\n\n/**\n * Used for permissions checks\n */\nexport const shareAccessSingletonDocument = {_id: schemaIdSingleton, _type: schemaTypeSingleton}\nexport const previewUrlSecretDocument = {\n  _id: `drafts.${uuid()}`,\n  _type: schemaType,\n}\n\nexport const previewUrlMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    input: Input\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    'notify preview will likely fail': log(\n      `Missing permissions to create preview secret, or read shared preview secret. Preview will likely fail loading.`,\n    ),\n    'assign preview search param': assign({\n      previewSearchParam: (_, params: {previewSearchParam: string | null}) =>\n        params.previewSearchParam,\n    }),\n    'assign error': assign({\n      error: (_, params: {message: string; error: unknown}) => {\n        return params.error instanceof Error\n          ? params.error\n          : new Error(params.message, {cause: params.error})\n      },\n    }),\n  },\n  actors: {\n    'check permission': fromObservable<PermissionCheckResult, CheckPermissionInput>(() =>\n      throwError(\n        () =>\n          new Error(\n            `The 'check permission' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'check permission': fromObservable(({input}: {input: CheckPermissionInput}) => ...)}})`,\n          ),\n      ),\n    ),\n    'resolve initial url': fromPromise<URL, {previewSearchParam: string | null}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve initial url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve initial url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve allow patterns': fromPromise<URLPattern[], {initialUrl: URL}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve allow patterns' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve allow pattern': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve url from preview search param': resolveUrlFromPreviewSearchParamActor,\n    'resolve preview mode': fromPromise<PreviewUrlPreviewMode | false, {targetOrigin: string}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'create preview secret': fromPromise<{\n      secret: string\n      expiresAt: Date\n    }>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'create preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'create preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'read shared preview secret': fromPromise<string | null>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'read shared preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'read shared preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve preview mode url': fromPromise<URL, ResolvePreviewModeUrlInput>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n  },\n  guards: {\n    'has checked permissions': ({context}) => {\n      return Boolean(\n        context.previewAccessSharingCreatePermission &&\n          context.previewAccessSharingReadPermission &&\n          context.previewAccessSharingUpdatePermission &&\n          context.previewUrlSecretPermission,\n      )\n    },\n    'search param has new origin': ({context, event}) => {\n      if (!context.previewUrl || !event.previewSearchParam) {\n        return false\n      }\n      try {\n        const previewSearchParamUrl = new URL(event.previewSearchParam, context.previewUrl)\n        return context.previewUrl.origin !== previewSearchParamUrl.origin\n      } catch {\n        return false\n      }\n    },\n    'can create preview secret': ({context}) => {\n      return context.previewUrlSecretPermission?.granted === true\n    },\n\n    'has preview mode with created secret': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewUrlSecretPermission?.granted === true\n    },\n    'has preview mode with share access': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewAccessSharingReadPermission?.granted === true\n    },\n    'has preview mode without permissions': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return (\n        context.previewAccessSharingReadPermission?.granted === false &&\n        context.previewUrlSecretPermission?.granted === false\n      )\n    },\n  },\n  delays: {\n    expiredSecret: ({context}) => {\n      if (!context.previewUrlSecret?.expiresAt) {\n        return 0\n      }\n      const now = Date.now()\n      const expiresAt = context.previewUrlSecret.expiresAt.getTime()\n      return Math.max(expiresAt - now, 0)\n    },\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOYBuBLMB3ABAKoBKAMgMRiqoD2qAdAA4A2AhgC4BmdAtvWphwESpBFgB2GGgGMOWGuIDaABgC6K1YlCMasLO3nitIAB6IArAA56AZgCcAdkcBGS8vMAmO+YBszgDQgAJ6Izs4+9M7KACzKztGWHg4OPubmAL7pgQLYeERklNR0TGxcvPzoucJkYpIycgqKzupqxjp6BgrGZggAtM520ZHRdjZjNjFe7oEhCGERUbHxicmpGVkgOUL5FFS0DCwc3Kh8W3kitVKynUoeLZpIIO36ht2IvV62Hl7elmE2lh83xmoXCkRicQSSRS5gSmWylW2IkK+xKR3KZ2qogkVwaShs9zauheXUePV6gPo3jSUyi-xBczBi0hKxh5mc8M2iPOBVgYHY+EY3IIfNYqGkAAtBWLWDwNESOq8yaCbM56A4bB5fGllHYvD4fAz4h56CNfG5LKqHMpLdFOZidvRJWBpABrCRQZBUHhYWB6BSwcjyx7PG5vPrs5TqjWqyyjTXRDwMjwxei68J2ZQ2nyWXN2jYOkT0dCwGjMbDiKAASXEL1YzEIqGY5AgCjA9BxNFd7cLZGLcDLFertYM9cbzEu9RuGmD2mJYeVfRGdipyh86Yc0XiE3MDK3JssIwcrmtPjGSXzCMEPNI-dL5Y9NbrDabKOKhzKJwq16xd8Hj5HLAxybSdrkMGdWhDeclVAclN3odlzBsKwBjSSxjwcZM7DVeJ1w8P4xmidk7HtYVHRLf9KwAQWYZgaFwZAOHYKhxEDVtxHbTtu2-KpyIHB9qNo+jGPYZjUFY0C8Qgh450VUlYPedkHHoHwnDSZDVOiGwfGiBlUhXXwwjsQYtKSYzSJ-Pj7yHGi6IYpiWMDPZ31KY5TjIosKIEqBbOEhzxNgSTpzUWcnmg+TTHePV6Hw3MYgzaItJ0hlYRNTNkLiHxBl1GILN4zz+KHccADFaB4TEAGUwDFSVGNQWUWzbDs6m43tby8oqm1KmhyuFKqaolOrZSC8CQsg2SSSMRdel8ZSNUTdlcw8M07AZQZrDXdaDRtUZnHWK98r7DqPRKsrKuq8VBplHg3wOVyMQ8o7CpOrqzr6i7auukbGjGmSwrkqaFL6MJlLiWFlC1EGty0hknAiXVVPMRx12UJwOQLR72ueytMQAWRoCAwEajjmqkVrMb-by8YJsBvqUX6FUm8Nem2+hbWPUZErGTcjS8NUJg8AE9T1ZwHHwvKkSe6yPWpwnic4lqewp46ceFfHCbpmdmkZhcgZmyxzFsDmTPcXUUiNRKDy3ZQJlVLSkYlm9KaHWWifYhWyaVyyCul1Wf3V2nOzAn71DuHWYMivovGsBxPCy74beWaJDWCUJzBSFTrUcQYdMzIFHd-FXPTVmn5dJrsvcOrHfeL-2ac1kKCXDiLyWcNKJiiHM-BtONwgtnMEM1DVNwhhI7B8AurMo2uqgD260U-dzval6fXYbwkoIB5moijLLkm5tvYRBo1nGQtND11ZaIdzEiMeX6vV5LuW+QFIVLNFS7pXquVxv+pnF1FtYP4OY7AG3QohJMqcEDeGUq4NwYQBhLEnkWWAABXaQ0g4CBhfoKMiH9JRf1lKFUMEceiizVPA0+7gtQQy8LzXU6obaJTFtEJwHhXDIL7G-WepccHcO2PgqUjBrrEPCoDSOFI3C2AGHtQ8sIiJJGTILZS7JRaeGSKw7CnDbz8LwAHJ06AOBgHOtIdA7Ay5cUrpLHRT92ymOqsxExZj16iK3gAqI6oaQ6QtE4YylhkynzmkCBGNgNR7VvgdaxTBbEGIccY969jzHOTuuiL8bVol10JrEoxTj+QuN-iQlu7xwjKX1P8bSTC0hGhcKaBIOZAQGkBKE7RGSeFZMMRACqEoxRgCohgrBFjFY8Sibo3A+iOldJ6X0zBfp8l-UKeIshjgqTGTiPYPaGotS7igd8QWtgsp6iQnFOEd8q6tKEOM6qnTunoGmQM5JC83LDKdqMy5rBrlTP6bMoOUkGab3-kDU+ERVEpnsEjDRVSdljBXKeQY3h5gOBaa8mmzt4k-nHIMz2zzfzIvaYVNFVRxxzObosxAfg1Q2jSOERIh5kIBNGKaNZ2lvjhFhEimJHUCVCAxQ8j8Tz0m4vbJyzERKfnBQ3hNXWkdyWeJsCMVhqNsK6mTO4Q2Q9DysLCEhDw7LMntjQV8wMJhYDsCMfQVgnAxIAAowAmEYFgdAnSXRmIAJTkAFTEg1MzYCuIBZHKYKlUiqWwrCMJkDZgDAYceRMfwUisPYZYTIGxxA03gI8NqJLmZ6msKqENcjErqIZL0cethvDGXLew9hiYWnOjdDLb0vp-SsUzdNcwEMEJ7WTohDMfgU4RpTCpUJnhYrHghuEFpRcnyjhfMwFtet2Q2FNOwsWZarBan8TsuMkRvhIzPJGDwmkWnJLnf6g0aZl0mQTURDdsxYiGwwsRIEgwEwTuxj5IS9lRKORPeSJCOF4XgrUZqbZsxwZszcJtbC4RUg2FfTXU6PVzoDSGjwH9ik-gxRGG4NtxkkZblhgyxIhFQG5lSPEODj89VoYjKqGKURkij0zImXSUCwiozZuDLUCQQY6tOVEr1WDqMsxNCkP4RFPBZj+I4I0qoRMODjIlceBzkK6raWAIT7DDZlNPhUuVkKI0pEXbHBISF1yAiIqpi5KL7E5ISWYoTna2b6Qg+DcFN7EAphLdpdOWVoPJ0RXxl5HKrmTNuYahzaQviaQPVERa8mlGeBUnnQyDStSwcCzi4L1kuV4HHNR4DCFdRaVVFSzcZ4VVIVsDEVhZ5QnWlYZZvRKLj3-KlT0FIKjVRZghkCXwqkjQGzVFxvOMisoWYy46QV9ABN+mo3mFZZ427lp032jzVa2bJGtCUtciak1AA */\n  id: 'Preview URL',\n  context: ({input}) => ({\n    initialUrl: null,\n    previewUrl: null,\n    error: null,\n    allowOrigins: null,\n    previewSearchParam: input.previewSearchParam,\n    previewUrlSecret: null,\n    previewAccessSharingCreatePermission: null,\n    previewAccessSharingReadPermission: null,\n    previewAccessSharingUpdatePermission: null,\n    previewUrlSecretPermission: null,\n    previewMode: null,\n  }),\n\n  invoke: [\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'read', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingReadPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingCreatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'update', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingUpdatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: previewUrlSecretDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewUrlSecretPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n  ],\n\n  on: {\n    'set preview search param': {\n      actions: {\n        type: 'assign preview search param',\n        params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n      },\n    },\n  },\n\n  states: {\n    checkingPermissions: {\n      always: {\n        guard: 'has checked permissions',\n        target: 'resolvingInitialUrl',\n      },\n      tags: 'busy',\n    },\n\n    resolvingInitialUrl: {\n      invoke: {\n        src: 'resolve initial url',\n        input: ({context}) => ({previewSearchParam: context.previewSearchParam}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve initial url',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingAllowPatterns',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n\n      tags: 'busy',\n    },\n\n    error: {\n      type: 'final',\n      tags: 'error',\n    },\n\n    resolvingAllowPatterns: {\n      invoke: {\n        src: 'resolve allow patterns',\n        input: ({context}) => ({initialUrl: context.initialUrl!}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingUrlFromPreviewSearchParam',\n          actions: assign({allowOrigins: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingUrlFromPreviewSearchParam: {\n      id: 'loop',\n      invoke: {\n        src: 'resolve url from preview search param',\n        input: ({context}) => ({\n          initialUrl: context.initialUrl!,\n          allowOrigins: context.allowOrigins!,\n          previewSearchParam: context.previewSearchParam,\n        }),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url from search param',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingPreviewMode',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingPreviewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n      invoke: {\n        src: 'resolve preview mode',\n        input: ({context}) => ({targetOrigin: context.initialUrl!.origin}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: [\n          {\n            guard: {\n              type: 'has preview mode with created secret',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.createPreviewSecret',\n          },\n          {\n            guard: {\n              type: 'has preview mode with share access',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.readShareAccess',\n          },\n          {\n            guard: {\n              type: 'has preview mode without permissions',\n              params: ({event}) => event.output,\n            },\n            actions: [\n              assign({\n                previewUrl: ({context}) => context.initialUrl,\n              }),\n              'notify preview will likely fail',\n            ],\n            target: 'success',\n          },\n          {\n            actions: assign({\n              previewUrl: ({context}) => context.initialUrl,\n            }),\n            target: 'success',\n          },\n        ],\n      },\n      tags: ['busy'],\n    },\n\n    success: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n    },\n\n    previewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n\n      states: {\n        createPreviewSecret: {\n          invoke: {\n            src: 'create preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to create preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({previewUrlSecret: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        readShareAccess: {\n          invoke: {\n            src: 'read shared preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to read shared preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({\n                previewUrlSecret: ({event}) => ({\n                  secret: event.output!,\n                  expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 60 * 24),\n                }),\n              }),\n            },\n          },\n          tags: ['busy'],\n        },\n        resolvePreviewUrl: {\n          invoke: {\n            src: 'resolve preview mode url',\n            input: ({context}) => ({\n              initialUrl: context.initialUrl!,\n              resolvedPreviewMode: context.previewMode!,\n              previewUrlSecret: context.previewUrlSecret!.secret,\n            }),\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to resolve preview url',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'success',\n              actions: assign({previewUrl: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        error: {\n          type: 'final',\n          tags: ['error'],\n        },\n        success: {\n          after: {\n            expiredSecret: {\n              guard: 'can create preview secret',\n              actions: assign({previewUrlSecret: null}),\n              target: 'createPreviewSecret',\n              reenter: true,\n            },\n          },\n        },\n      },\n      initial: 'readShareAccess',\n    },\n  },\n\n  initial: 'checkingPermissions',\n})\nexport type PreviewUrlRef = ActorRefFrom<typeof previewUrlMachine>\n","import {useToast} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {useActiveWorkspace, useClient, useCurrentUser, useGrantsStore, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\nimport {fromObservable} from 'xstate'\n\nimport {defineCreatePreviewSecretActor} from './actors/create-preview-secret'\nimport {defineReadSharedSecretActor} from './actors/read-shared-secret'\nimport {defineResolveAllowPatternsActor} from './actors/resolve-allow-patterns'\nimport {defineResolveInitialUrlActor} from './actors/resolve-initial-url'\nimport {defineResolvePreviewModeActor} from './actors/resolve-preview-mode'\nimport {defineResolvePreviewModeUrlActor} from './actors/resolve-preview-mode-url'\nimport {API_VERSION} from './constants'\nimport {presentationLocaleNamespace} from './i18n'\nimport {previewUrlMachine, type PreviewUrlRef} from './machines/preview-url'\nimport {type PreviewUrlAllowOption, type PreviewUrlOption} from './types'\nimport {usePresentationPerspective} from './usePresentationPerspective'\n\nexport function usePreviewUrlActorRef(\n  previewUrlOption: PreviewUrlOption | undefined,\n  allowOption: PreviewUrlAllowOption | undefined,\n): PreviewUrlRef {\n  const grantsStore = useGrantsStore()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const currentUserId = currentUser?.id\n  const workspace = useActiveWorkspace()\n  const studioBasePath = workspace?.activeWorkspace?.basePath || '/'\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n  const {push: pushToast} = useToast()\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const perspective = usePresentationPerspective()\n\n  const actorRef = useActorRef(\n    previewUrlMachine.provide({\n      actions: {\n        'notify preview will likely fail': () =>\n          pushToast({\n            id: 'preview-url-secret.missing-grants',\n            closable: true,\n            status: 'error',\n            duration: Infinity,\n            title: t('preview-url-secret.missing-grants'),\n          }),\n      },\n      actors: {\n        'create preview secret': defineCreatePreviewSecretActor({client, currentUserId}),\n        'read shared preview secret': defineReadSharedSecretActor({client}),\n        'resolve allow patterns': defineResolveAllowPatternsActor({\n          client,\n          allowOption,\n        }),\n        'resolve initial url': defineResolveInitialUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'resolve preview mode': defineResolvePreviewModeActor({\n          client,\n          previewUrlOption,\n        }),\n        'resolve preview mode url': defineResolvePreviewModeUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'check permission': fromObservable(({input}) =>\n          grantsStore.checkDocumentPermission(input.checkPermissionName, input.document),\n        ),\n      },\n    }),\n    {input: {previewSearchParam}},\n  )\n\n  /**\n   * Sync changes to router state for the preview search param\n   */\n  useEffect(() => {\n    actorRef.send({type: 'set preview search param', previewSearchParam})\n  }, [actorRef, previewSearchParam])\n\n  const error = useSelector(actorRef, (state) =>\n    state.status === 'error' ? state.error : state.hasTag('error') ? state.context.error : null,\n  )\n\n  // Propagate the error to the nearest error boundary\n  if (error) throw error\n\n  return actorRef\n}\n","import {useToast} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useReportInvalidPreviewSearchParam(previewUrlRef: PreviewUrlRef): void {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n\n  const allowOrigins = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  const currentOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  useEffect(() => {\n    if (!Array.isArray(allowOrigins) || !previewSearchParam || !currentOrigin) return\n    const nextOrigin = new URL(previewSearchParam, currentOrigin).origin\n    if (!allowOrigins.some((pattern) => pattern.test(nextOrigin))) {\n      pushToast({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${nextOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-search-param.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-search-param.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              previewSearchParam,\n              blockedOrigin: nextOrigin,\n            }}\n          />\n        ),\n      })\n    }\n  }, [allowOrigins, currentOrigin, previewSearchParam, pushToast, t])\n}\n","import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n","import {useSelector} from '@xstate/react'\nimport {type Tool} from 'sanity'\n\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {usePreviewUrlActorRef} from './usePreviewUrlActorRef'\nimport {useReportInvalidPreviewSearchParam} from './useReportInvalidPreviewSearchParam'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck({\n  tool,\n}: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const previewUrlRef = usePreviewUrlActorRef(tool.options?.previewUrl, tool.options?.allowOrigins)\n  useReportInvalidPreviewSearchParam(previewUrlRef)\n\n  const previewAccessSharingCreatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingCreatePermission,\n  )\n  const previewAccessSharingUpdatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingUpdatePermission,\n  )\n  const previewAccessSharingReadPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingReadPermission,\n  )\n  const previewUrlSecretPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewUrlSecretPermission,\n  )\n  const url = useSelector(previewUrlRef, (state) => state.context.previewUrl)\n  // @TODO the vercel protection bypass can be moved to the iframe level\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    !url ||\n    vercelProtectionBypassReadyState === 'loading' ||\n    !previewAccessSharingCreatePermission ||\n    typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n    !previewAccessSharingUpdatePermission ||\n    typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n    !previewUrlSecretPermission ||\n    !previewAccessSharingReadPermission ||\n    typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n    typeof previewUrlSecretPermission.granted === 'undefined'\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      tool={tool}\n      initialPreviewUrl={url}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n      previewUrlRef={previewUrlRef}\n    />\n  )\n}\n"],"names":["PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","presentationMachine","setup","types","actions","actors","guards","createMachine","id","context","url","error","visualEditingOverlaysEnabled","assign","target","states","description","tags","loading","loaded","event","enabled","idle","refreshing","reloading","initial","SharedStateProvider","children","Symbol","for","sharedState","useRef","t2","state","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","t7","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","PresentationPanelsContext","Error","getPanelStyle","registerElement","unregisterElement","style","type","useLayoutEffect","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","data","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","from","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","message","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","encodeQueryString","params","parts","Object","entries","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","forwardRef","ref","searchParams","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","childId","find","r","_id","getPublishedId","_type","backLinkProps","childLinkProps_0","nextParams_0","inspect","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","_temp4","closeCurrent","_temp5","duplicateCurrent","_temp6","setView","_temp7","setParams","setPayload","_temp8","navigateIntent","_temp9","intentName","intentParams","options_0","console","warn","options","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","height","StructureDocumentPane","DocumentPanel","StructureToolProvider","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","perspectiveStack","usePerspective","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","snapshot","getPreviewValueWithFallback","fallback","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationProvider","name","useAllowPatterns","previewUrlRef","allowPatterns","useSelector","TypeError","allowOrigins","encodeStudioPerspective","studioPerspective","useId","useReactId","startsWith","replace","IFrame","forwardedRef","animate","onLoad","preventClick","src","variants","useImperativeHandle","instance","handleBlur","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","viewTransitionName","IFrameElement","motion","create","iframe","IFrameOverlay","Box","GlobalViewTransition","createGlobalStyle","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","perspective","targetOrigin","URL","urlSearchParamPreviewPerspective","pathname","search","openPreviewLink","currentTarget","href","handleOpenPopup","LaunchIcon","useTargetOrigin","previewUrl","origin","PreviewLocationInput","fontSize","onChange","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","toString","pattern","test","reportValidity","nextValue","handleKeyDown","nextValue_0","handleClear","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","push","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","displayName","PreviewHeaderDefault","canSharePreviewAccess","iframeRef","onPathChange","onRefresh","overlaysConnection","presentationRef","setViewport","toggleOverlay","viewport","toggleViewportSize","send","handleRefresh","isLoading","isLoaded","isRefreshing","isReloading","overlaysEnabled","previewURL","withoutSecretSearchParams","perspectiveToggleTooltipId","previewUrlBusy","PanelLeftIcon","content","fallbackPlacements","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","t30","RefreshIcon","t31","t32","t33","t34","node","setProperty","t35","t36","t37","t38","t39","t40","MobileDeviceIcon","DesktopIcon","t41","t42","t43","t44","PreviewHeader","renderDefault","HeaderComponent","header","minHeight","matches","state_0","state_1","state_2","state_3","state_4","hasTag","MotionFlex","Preview","loadersConnection","vercelProtectionBypass","stablePerspective","setStablePerspective","urlPerspective","urlSearchParamVercelProtectionBypass","urlSearchParamVercelSetBypassCookie","prefersReducedMotion","usePrefersReducedMotion","previewHeader","timedOut","setTimedOut","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","toast","checkOrigin","setCheckOrigin","reportedMismatches","Set","reportMismatchingOrigin","useEffectEvent","reportedOrigin","allow","add","duration","Infinity","usePresentationNavigate","navigateEvent","nextUrl","hash","contentWindow","createController","addTarget","createChannel","heartbeat","connectTo","createConnectionMachine","provide","createCompatibilityActors","stop","start","destroy","interval","setInterval","postMessage","domain","clearInterval","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","active","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","validateApiPerspective","published","setPublished","previewDrafts","setPreviewDrafts","urlRef","perspective_0","documents","setCache","cache","isEqual","setDocumentsOnPage","keyedCache","uniqueDocuments","cache_0","forEach","doc","sourceDocument","_projectId","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","studioPath","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","rev","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","nextState","nextSearchState","forceReplace","routerSearchState","searchState","usePopups","popups","setPopups","source","open","unsubs","size","source_0","closed","source_1","source_2","POPUP_CHECK_INTERVAL","unsub","usePresentationPerspective","selectedPerspectiveName","selectedReleaseId","useStatus","statusMap","setStatusMap","handshaking","memoStatus","connection","hasConnected_0","hasConnected","status_1","setStatusFromEvent","status_0","LiveQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","DEFAULT_TOOL_NAME","unstable_header","previewMode","shareAccess","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useActorRef","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","handleNavigate","urlWithoutSearch","URLSearchParams","refreshRef","onStatus","handleFocusPath","nextPath","handlePreviewPath","handleStructureParams","frameOrigin","previewOrigin","newUrl","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","livePreviewEnabled","workspace","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","IS_MAC","platform","MODIFIERS","alt","ctrl","mod","keys","every","toUpperCase","defineCreatePreviewSecretActor","currentUserId","fromPromise","createPreviewSecret","defineReadSharedSecretActor","defineResolveAllowPatternsActor","allowOption","input","URLPattern","maybePatterns","urlPatterns","urlPattern","defineResolveInitialUrlActor","studioBasePath","previewUrlOption","studioPreviewPerspective","previewSearchParam","defineResolvePreviewModeActor","draftMode","enable","defineResolvePreviewModeUrlActor","resolvedPreviewMode","urlSearchParamPreviewSecret","urlSearchParamPreviewPathname","resolveUrlFromPreviewSearchParamActor","previewSearchParamUrl","shareAccessSingletonDocument","schemaIdSingleton","schemaTypeSingleton","previewUrlSecretDocument","previewUrlMachine","log","_","cause","fromObservable","throwError","Promise","reject","has checked permissions","Boolean","previewAccessSharingCreatePermission","previewAccessSharingReadPermission","previewAccessSharingUpdatePermission","previewUrlSecretPermission","search param has new origin","can create preview secret","granted","has preview mode with created secret","has preview mode with share access","has preview mode without permissions","delays","expiredSecret","expiresAt","now","Date","getTime","invoke","checkPermissionName","onError","onSnapshot","checkingPermissions","always","guard","resolvingInitialUrl","onDone","output","resolvingAllowPatterns","resolvingUrlFromPreviewSearchParam","resolvingPreviewMode","reenter","success","readShareAccess","resolvePreviewUrl","after","usePreviewUrlActorRef","grantsStore","useGrantsStore","router","checkDocumentPermission","actorRef","useReportInvalidPreviewSearchParam","currentOrigin","nextOrigin","blockedOrigin","useVercelBypassSecret","vercelProtectionBypassReadyState","ready","useReducer","vercelProtectionBypassSecret","setVercelProtectionBypassSecret","subcribeToVercelProtectionBypass","PresentationToolGrantsCheck"],"mappings":"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"}